
SELECT

tag-specific
  disabled*
  multiple*
  name*
  required*

ax
  collection
  placeholder
  readonly
  selectTag
  value


  // tag-specific
  //   disabled*
  //   name*
  //   middle*
  //   pattern
  //   placeholder
  //   readonly
  //   required
  //   type
  //   value
  //
  // ax
  //   invalid
  //   inputTag



  CHECK

  tag-specific
    checked*
    disabled*
    name*
    readonly
    required
    type*

  ax
    value
    inputTag





TEXTAREA

tag-specific
  disabled*
  name*
  placeholder
  readonly
  required

ax
  value
  textareaTag


GLOBAL
  class
  data
  id
  style
  title







form(name, opts={})
opts
  action - URL fopr submit
  method - HTTP method for submit

field
required: name;
optional: field_type, label, comment, hint, placeholder, pattern, pattern_invalid_message,

group
optional: depends_on, legend, border

nest
required: name;
optional: collection



// :field_types
// "boolean [ Deprecated in favour of checkbox_boolean ]": "boolean",
// "checkbox (Single check box. Returns value when checked, otherwise empty. Default value is '1'. Input label shown beside checkbox.)": "checkbox",
// "checkbox_boolean (Single check box. Returns 'true' when cheched, otherwise 'false'. Input label shown beside checkbox.)": "checkbox_boolean",
// "check_boxes [ Deprecated in favour of checkboxes ]": "check_boxes",
// "checkboxes (Multiple checkboxes. Return an array of checked values. Value can be a comma-separated list. Uses collection for checkbox values and labels.)": "checkboxes",
// "country (Returns two-letter country code.)": "country",
// "date": "date",
// "datetime": "datetime",
// "decimal": "decimal",
// "email": "email",
// "file": "file",
// "float": "float",
// "hidden": "hidden",
// "integer": "integer",
// "language (Returns two-letter language code.)": "language",
// "password": "password",
// "password_with_confirmation": "password_with_confirmation",
// "radio_buttons (Uses collection for radio button values and labels.)": "radio_buttons",
// # "range": "range",
// "select (Uses collection for list values and labels.)": "select",
// "select_multiple (Return an array of selected values. Value can be a comma-separated list. Uses collection for list values and labels.)": "select_multiple",
// "select_with_input (Select with user input. Uses collection for list values and labels.)": "select_with_input",
// "string (Single line of text.)": "string",
// "time": "time",
// "time_zone": "time_zone",
// "tel": "tel",
// "text (Multiple lines of text.)": "text",
// "url": "url",
// "uuid": "uuid"
