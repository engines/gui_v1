q
Dir.glob( [ './app/api/*.*' ] )
Dir.glob( [ './app/*.*' ] )
Dir.glob( [ '/app/*.*' ] )
Dir.glob( [ '*.*' ] )
sources
Dir.glob( sources )
q
y
q
qy
q
sources
Dir.glob( [ '*.*' ] )[A
Dir.glob( [ *.*  ] )
path[A
sources
Dir.glob( sources )
c
App::Api::Models::Distribution::Client.distribution
q
Sinatra::Base.environment
q
c
Dir.glob( sources )
c
Dir.glob( sources )
c
Dir.glob( sources )
Dir.global( sources )
sources
c
sources
q
c
self.b
b
b.count('/')
a.count('/')
a.methods
c
puts a.methods.sort
a.methods
b.count('/')
a.count('/')
a
c
params
q
erb "/ax_framework/themes/#{params[:theme]}".to_sym
c
q
erb "/ax_framework/themes/#{params[:theme]}".to_sym
"/ax_framework/themes/#{params[:theme]}".to_sym
params[:theme]
c
q
JSON.pretty_generate( test_params )
JSON.pretty_generate
JSON/pretty_generate
JSON
test_params
pp
q
File.read( "/#{settings.views}/ax_framework/themes/#{params[:path]}" )
wd
pwd
settings.views
q
File.read( "/ax_framework/themes/#{params[:path]}" )
q
File.read( "/ax_framework/#{params[:path]}" )
q
params[:path]
params
path
c
erb :'/ax_framework/standard_theme.js'
q
erb :'/ax_framework/standard_theme.js'
q
erb :'/ax_framework/axf.js'
q
c
Date.new(t.year, ( t.month.to_i - months_ago.to_i ) )
t.month.to_i - months_ago.to_i 
months_ago
t.month
c
q
c
params[:path].split("/")[1] == "power"
q
params[:path].split("/")[1]
params
path
q
request.accept? "text/html"
request.accept
q
request.request_method
puts request.methods.sort
puts request.methods
request.methods
request.keys
request[:method]
request.method
request
method
c
q
params
q
params
params.delete("captures")
params.keys
q
params.to_h
params
c
params
c
params
c
params
q
params[:id].to_i
params[:id]
test_people
c
response.body.is_a? String
content_type
response.body
c
content_type
c
content_type
