<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">

  <link rel="stylesheet" href="/node_modules/@fortawesome/fontawesome-free/css/all.min.css">

  <link rel="stylesheet" href="/vendor/bootstrap-4.1.0-dist/css/bootstrap.min.css">

  <script src="/vendor/marked-0.3.6.min.js"></script>

  <link rel="stylesheet" href="/node_modules/codemirror/lib/codemirror.css">
  <link rel="stylesheet" href="/node_modules/codemirror/theme/neo.css">

  <link rel="stylesheet" href="/node_modules/@mdi/font/css/materialdesignicons.min.css">

  <script src="/node_modules/codemirror/lib/codemirror.js"></script>
  <script src="/node_modules/codemirror/addon/display/placeholder.js"></script>
  <script src="/node_modules/codemirror/mode/shell/shell.js"></script>
  <script src="/node_modules/codemirror/mode/javascript/javascript.js"></script>
  <script src="/node_modules/codemirror/mode/ruby/ruby.js"></script>
  <script src="/node_modules/codemirror/mode/python/python.js"></script>
  <script src="/node_modules/codemirror/mode/xml/xml.js"></script>
  <script src="/node_modules/codemirror/mode/yaml/yaml.js"></script>
  <script src="/node_modules/codemirror/keymap/vim.js"></script>
  <script src="/node_modules/codemirror/keymap/emacs.js"></script>
  <script src="/node_modules/codemirror/keymap/sublime.js"></script>

  <script src="/node_modules/html5sortable/dist/html5sortable.js"></script>


  <script type="application/javascript" src="/axfunction/axf.js" ></script>
  <script type="application/javascript" src="/axfunction/axf-plugins.js" ></script>
  <script type="application/javascript" src="/dev/dev.js" ></script>
  <!-- <script type="application/javascript" src="/axf/themes/basic.js" ></script> -->

</head>
<body>

<script>

Shim0 = {
  element: {
    input: ( f, target ) => ( options ) => (a,x) => a.input( options ),
  },
  control: {
    input: ( f, target ) => ( options ) => f.element.input( options ),
  },
}

Shim1 = {
  element: {
    input: ( f, target ) => ( options={} ) => target(
      { ...options, style: { height: '50px', ...options.style } } ),
  },
}

Shim2 = {
  element: {
    input: ( f, target ) => ( options={} ) => target(
      { ...options, style: { width: '50px', ...options.style } } ),
  },
}

Shim3 = {
  element: {
    input: ( f, target ) => ( options={} ) => target(
      { ...options, style: { border: '2px solid red', ...options.style } } ),
  },
}

Shim4 = {
  element: {
    input: ( f, target ) => ( options={} ) => target(
      { ...options, style: { backgroundColor: 'blue', ...options.style } } ),
  },
}

app2 = (a,x) => x.appkit.form( {
  async: true,
  shims:  [ Shim1, Shim2, Shim3, Shim4 ],
  form: (f) => f.control.input( { value: '$', style: { color: 'white' } } )
} )

ax.x.appkit.form = function( options={} ) {

  let form = options.form || ( () => {} )
  let shims = [ Shim0, ...( options.shims || [] ) ]

  let f = new this.form.factory( shims )

  return (a,x) => a.form( form(f) )


}

ax.x.appkit.form.factory = function( shims ) {

  let proxy = function( factory, base, shim ) {

    return new Proxy( base, {
      get: ( target, property ) => {
        let object = target[property] || {}
        if ( ax.is.function( shim[property] ) ) {
          return shim[property]( factory.target, object )
        } else if ( ax.is.object( shim[property] ) ) {
          return proxy( factory, object, shim[property] )
        } else {
          return object
        }
      },
    } )

  }

  this.target = {}
  for ( let i in shims ) {
    this.target = proxy( this, this.target, shims[i] )
  }

  return this.target

}

ax( app2 )

</script>


</body>
</html>
